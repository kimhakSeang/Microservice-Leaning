#spring.datasource.url= jdbc:postgresql://postgres:5432/account_service
spring.application.name=account
spring.profiles.active=dev 
spring.config.import=configserver:http://localhost:8071/

server.port: 8080
management.endpoints.web.exposure.include=* 
#management.endpoint.health.show-details=always

#spring.datasource.url= jdbc:postgresql://account-db:5432/account_service
#spring.datasource.url= jdbc:postgresql://locahost:5432/account_service
#spring.datasource.username= account
#spring.datasource.password= account123

# Profile
spring.application.name              = account
spring.profiles.active               = ${SPRING_PROFILE_ACTIVE:prod}
spring.config.import                 = ${SPRING_CONFIG_IMPORT:configserver:http://localhost:8071}
server.port                          = 8080

# DB
#spring.data.mongodb.uri=mongodb+srv://kimhak123:XxE9n3tliYbJMWoq@cluster0.vpa07.mongodb.net/
spring.data.mongodb.database         = account
spring.data.mongodb.port=27017
spring.data.mongodb.host=${MONGODB_HOST_NAME:localhost}

#spring.datasource.url                = jdbc:h2:mem:testdb
#spring.datasource.driverClassName    = org.h2.Driver
#spring.datasource.username           = sa
#spring.datasource.password           =

# JPA
spring.jpa.database-platform         = org.hibernate.dialect.H2Dialect
spring.h2.console.enabled            = true
spring.jpa.hibernate.ddl-auto        = update
spring.jpa.show-sql                  = true

# Eureka Server
eureka.instance.preferIpAddress      = true
eureka.client.registerWithEureka     = true
eureka.client.fetchRegistry          = true
eureka.client.serviceUrl.defaultZone = ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:9001/eureka/}

management.endpoint.shutdown.enabled = true
management.endpoints.web.exposure.include=*

# Actuator
info.app.name                        = Account Service
info.app.description                 = Account Service Version 1
info.app.version                     = 1.0.0 (get from pom)
management.info.env.enabled          = true

# Circuit Breaker
# Register to Actuator
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
# Threshold
resilience4j.circuitbreaker.instances.CustomerDetailSupport.minimumNumberOfCalls= 5
# Rate Limit 50%
resilience4j.circuitbreaker.instances.CustomerDetailSupport.failureRateThreshold= 50
# Time to check and update status
resilience4j.circuitbreaker.instances.CustomerDetailSupport.waitDurationInOpenState= 30000
# Threshold after OPEN
resilience4j.circuitbreaker.instances.CustomerDetailSupport.permittedNumberOfCallsInHalfOpenState=2

# Retry
resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.retryCustomerDetail.maxRetryAttempts= 3
resilience4j.retry.instances.retryCustomerDetail.waitDuration= 2000

# Rate Limit
resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
resilience4j.ratelimiter.instances.greetingRateLimit.timeoutDuration=10000
resilience4j.ratelimiter.instances.greetingRateLimit.limitRefreshPeriod=10000
resilience4j.ratelimiter.instances.greetingRateLimit.limitForPeriod=1

logging.level.com.example.package.path.to.your.FeignClient=DEBUG
logging.level.feign=DEBUG
